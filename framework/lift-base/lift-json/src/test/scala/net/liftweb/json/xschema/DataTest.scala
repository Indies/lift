// These tests were auto-generated by Lift Json XSchema - do not edit
package net.liftweb.json.xschema {
  import _root_.org.specs.Specification
  import _root_.org.specs.runner.{Runner, JUnit}
  
  import net.liftweb.json.JsonParser._
  import net.liftweb.json.JsonAST._
  
  import net.liftweb.json.xschema.Serialization._
  import net.liftweb.json.xschema.Constants._

  import net.liftweb.json.xschema.{XSchema, XReference, XPrimitiveRef, XContainerRef, XCollection, XDefinition, XMultitype, XField, XOrder, XRoot, XDefinitionRef, XBoolean, XInt, XLong, XFloat, XDouble, XString, XJSON, XDate, XList, XSet, XArray, XMap, XOptional, XTuple, XProduct, XCoproduct, XUnion, XConstant, XRealField, XViewField, XConstantField, XOrderAscending, XOrderDescending, XOrderIgnore}
  
  object ExampleProductData {
    lazy val ExampleXRoot: net.liftweb.json.xschema.XRoot = JObject(Nil).deserialize[net.liftweb.json.xschema.XRoot]
    
    lazy val ExampleXDefinitionRef: net.liftweb.json.xschema.XDefinitionRef = JObject(Nil).deserialize[net.liftweb.json.xschema.XDefinitionRef]
    
    lazy val ExampleXBoolean: net.liftweb.json.xschema.XBoolean.type = Extractors.XBooleanExtractor.extract(JObject(Nil))
    
    lazy val ExampleXInt: net.liftweb.json.xschema.XInt.type = Extractors.XIntExtractor.extract(JObject(Nil))
    
    lazy val ExampleXLong: net.liftweb.json.xschema.XLong.type = Extractors.XLongExtractor.extract(JObject(Nil))
    
    lazy val ExampleXFloat: net.liftweb.json.xschema.XFloat.type = Extractors.XFloatExtractor.extract(JObject(Nil))
    
    lazy val ExampleXDouble: net.liftweb.json.xschema.XDouble.type = Extractors.XDoubleExtractor.extract(JObject(Nil))
    
    lazy val ExampleXString: net.liftweb.json.xschema.XString.type = Extractors.XStringExtractor.extract(JObject(Nil))
    
    lazy val ExampleXJSON: net.liftweb.json.xschema.XJSON.type = Extractors.XJSONExtractor.extract(JObject(Nil))
    
    lazy val ExampleXDate: net.liftweb.json.xschema.XDate.type = Extractors.XDateExtractor.extract(JObject(Nil))
    
    lazy val ExampleXList: net.liftweb.json.xschema.XList = JObject(Nil).deserialize[net.liftweb.json.xschema.XList]
    
    lazy val ExampleXSet: net.liftweb.json.xschema.XSet = JObject(Nil).deserialize[net.liftweb.json.xschema.XSet]
    
    lazy val ExampleXArray: net.liftweb.json.xschema.XArray = JObject(Nil).deserialize[net.liftweb.json.xschema.XArray]
    
    lazy val ExampleXMap: net.liftweb.json.xschema.XMap = JObject(Nil).deserialize[net.liftweb.json.xschema.XMap]
    
    lazy val ExampleXOptional: net.liftweb.json.xschema.XOptional = JObject(Nil).deserialize[net.liftweb.json.xschema.XOptional]
    
    lazy val ExampleXTuple: net.liftweb.json.xschema.XTuple = JObject(Nil).deserialize[net.liftweb.json.xschema.XTuple]
    
    lazy val ExampleXProduct: net.liftweb.json.xschema.XProduct = JObject(Nil).deserialize[net.liftweb.json.xschema.XProduct]
    
    lazy val ExampleXCoproduct: net.liftweb.json.xschema.XCoproduct = JObject(Nil).deserialize[net.liftweb.json.xschema.XCoproduct]
    
    lazy val ExampleXUnion: net.liftweb.json.xschema.XUnion = JObject(Nil).deserialize[net.liftweb.json.xschema.XUnion]
    
    lazy val ExampleXConstant: net.liftweb.json.xschema.XConstant = JObject(Nil).deserialize[net.liftweb.json.xschema.XConstant]
    
    lazy val ExampleXRealField: net.liftweb.json.xschema.XRealField = JObject(Nil).deserialize[net.liftweb.json.xschema.XRealField]
    
    lazy val ExampleXViewField: net.liftweb.json.xschema.XViewField = JObject(Nil).deserialize[net.liftweb.json.xschema.XViewField]
    
    lazy val ExampleXConstantField: net.liftweb.json.xschema.XConstantField = JObject(Nil).deserialize[net.liftweb.json.xschema.XConstantField]
    
    lazy val ExampleXOrderAscending: net.liftweb.json.xschema.XOrderAscending.type = Extractors.XOrderAscendingExtractor.extract(JObject(Nil))
    
    lazy val ExampleXOrderDescending: net.liftweb.json.xschema.XOrderDescending.type = Extractors.XOrderDescendingExtractor.extract(JObject(Nil))
    
    lazy val ExampleXOrderIgnore: net.liftweb.json.xschema.XOrderIgnore.type = Extractors.XOrderIgnoreExtractor.extract(JObject(Nil))
  }
  class DataProductSerializationTest extends Runner(DataProductSerializationExamples) with JUnit
  object DataProductSerializationExamples extends Specification {
    "Deserialization of XRoot succeeds even when information is missing" in {
      ExampleProductData.ExampleXRoot.isInstanceOf[net.liftweb.json.xschema.XRoot] must be (true)
    }
    "Serialization of XRoot has non-zero information content" in {
      ExampleProductData.ExampleXRoot.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XDefinitionRef succeeds even when information is missing" in {
      ExampleProductData.ExampleXDefinitionRef.isInstanceOf[net.liftweb.json.xschema.XDefinitionRef] must be (true)
    }
    "Serialization of XDefinitionRef has non-zero information content" in {
      ExampleProductData.ExampleXDefinitionRef.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XBoolean succeeds even when information is missing" in {
      ExampleProductData.ExampleXBoolean.isInstanceOf[net.liftweb.json.xschema.XBoolean.type] must be (true)
    }
    "Serialization of XBoolean has non-zero information content" in {
      Decomposers.XBooleanDecomposer.decompose(ExampleProductData.ExampleXBoolean) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XInt succeeds even when information is missing" in {
      ExampleProductData.ExampleXInt.isInstanceOf[net.liftweb.json.xschema.XInt.type] must be (true)
    }
    "Serialization of XInt has non-zero information content" in {
      Decomposers.XIntDecomposer.decompose(ExampleProductData.ExampleXInt) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XLong succeeds even when information is missing" in {
      ExampleProductData.ExampleXLong.isInstanceOf[net.liftweb.json.xschema.XLong.type] must be (true)
    }
    "Serialization of XLong has non-zero information content" in {
      Decomposers.XLongDecomposer.decompose(ExampleProductData.ExampleXLong) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XFloat succeeds even when information is missing" in {
      ExampleProductData.ExampleXFloat.isInstanceOf[net.liftweb.json.xschema.XFloat.type] must be (true)
    }
    "Serialization of XFloat has non-zero information content" in {
      Decomposers.XFloatDecomposer.decompose(ExampleProductData.ExampleXFloat) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XDouble succeeds even when information is missing" in {
      ExampleProductData.ExampleXDouble.isInstanceOf[net.liftweb.json.xschema.XDouble.type] must be (true)
    }
    "Serialization of XDouble has non-zero information content" in {
      Decomposers.XDoubleDecomposer.decompose(ExampleProductData.ExampleXDouble) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XString succeeds even when information is missing" in {
      ExampleProductData.ExampleXString.isInstanceOf[net.liftweb.json.xschema.XString.type] must be (true)
    }
    "Serialization of XString has non-zero information content" in {
      Decomposers.XStringDecomposer.decompose(ExampleProductData.ExampleXString) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XJSON succeeds even when information is missing" in {
      ExampleProductData.ExampleXJSON.isInstanceOf[net.liftweb.json.xschema.XJSON.type] must be (true)
    }
    "Serialization of XJSON has non-zero information content" in {
      Decomposers.XJSONDecomposer.decompose(ExampleProductData.ExampleXJSON) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XDate succeeds even when information is missing" in {
      ExampleProductData.ExampleXDate.isInstanceOf[net.liftweb.json.xschema.XDate.type] must be (true)
    }
    "Serialization of XDate has non-zero information content" in {
      Decomposers.XDateDecomposer.decompose(ExampleProductData.ExampleXDate) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XList succeeds even when information is missing" in {
      ExampleProductData.ExampleXList.isInstanceOf[net.liftweb.json.xschema.XList] must be (true)
    }
    "Serialization of XList has non-zero information content" in {
      ExampleProductData.ExampleXList.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XSet succeeds even when information is missing" in {
      ExampleProductData.ExampleXSet.isInstanceOf[net.liftweb.json.xschema.XSet] must be (true)
    }
    "Serialization of XSet has non-zero information content" in {
      ExampleProductData.ExampleXSet.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XArray succeeds even when information is missing" in {
      ExampleProductData.ExampleXArray.isInstanceOf[net.liftweb.json.xschema.XArray] must be (true)
    }
    "Serialization of XArray has non-zero information content" in {
      ExampleProductData.ExampleXArray.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XMap succeeds even when information is missing" in {
      ExampleProductData.ExampleXMap.isInstanceOf[net.liftweb.json.xschema.XMap] must be (true)
    }
    "Serialization of XMap has non-zero information content" in {
      ExampleProductData.ExampleXMap.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XOptional succeeds even when information is missing" in {
      ExampleProductData.ExampleXOptional.isInstanceOf[net.liftweb.json.xschema.XOptional] must be (true)
    }
    "Serialization of XOptional has non-zero information content" in {
      ExampleProductData.ExampleXOptional.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XTuple succeeds even when information is missing" in {
      ExampleProductData.ExampleXTuple.isInstanceOf[net.liftweb.json.xschema.XTuple] must be (true)
    }
    "Serialization of XTuple has non-zero information content" in {
      ExampleProductData.ExampleXTuple.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XProduct succeeds even when information is missing" in {
      ExampleProductData.ExampleXProduct.isInstanceOf[net.liftweb.json.xschema.XProduct] must be (true)
    }
    "Serialization of XProduct has non-zero information content" in {
      ExampleProductData.ExampleXProduct.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XCoproduct succeeds even when information is missing" in {
      ExampleProductData.ExampleXCoproduct.isInstanceOf[net.liftweb.json.xschema.XCoproduct] must be (true)
    }
    "Serialization of XCoproduct has non-zero information content" in {
      ExampleProductData.ExampleXCoproduct.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XUnion succeeds even when information is missing" in {
      ExampleProductData.ExampleXUnion.isInstanceOf[net.liftweb.json.xschema.XUnion] must be (true)
    }
    "Serialization of XUnion has non-zero information content" in {
      ExampleProductData.ExampleXUnion.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XConstant succeeds even when information is missing" in {
      ExampleProductData.ExampleXConstant.isInstanceOf[net.liftweb.json.xschema.XConstant] must be (true)
    }
    "Serialization of XConstant has non-zero information content" in {
      ExampleProductData.ExampleXConstant.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XRealField succeeds even when information is missing" in {
      ExampleProductData.ExampleXRealField.isInstanceOf[net.liftweb.json.xschema.XRealField] must be (true)
    }
    "Serialization of XRealField has non-zero information content" in {
      ExampleProductData.ExampleXRealField.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XViewField succeeds even when information is missing" in {
      ExampleProductData.ExampleXViewField.isInstanceOf[net.liftweb.json.xschema.XViewField] must be (true)
    }
    "Serialization of XViewField has non-zero information content" in {
      ExampleProductData.ExampleXViewField.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XConstantField succeeds even when information is missing" in {
      ExampleProductData.ExampleXConstantField.isInstanceOf[net.liftweb.json.xschema.XConstantField] must be (true)
    }
    "Serialization of XConstantField has non-zero information content" in {
      ExampleProductData.ExampleXConstantField.serialize mustNot be (JObject(Nil))
    }
  
    
    "Deserialization of XOrderAscending succeeds even when information is missing" in {
      ExampleProductData.ExampleXOrderAscending.isInstanceOf[net.liftweb.json.xschema.XOrderAscending.type] must be (true)
    }
    "Serialization of XOrderAscending has non-zero information content" in {
      Decomposers.XOrderAscendingDecomposer.decompose(ExampleProductData.ExampleXOrderAscending) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XOrderDescending succeeds even when information is missing" in {
      ExampleProductData.ExampleXOrderDescending.isInstanceOf[net.liftweb.json.xschema.XOrderDescending.type] must be (true)
    }
    "Serialization of XOrderDescending has non-zero information content" in {
      Decomposers.XOrderDescendingDecomposer.decompose(ExampleProductData.ExampleXOrderDescending) mustNot be (JObject(Nil))
    }
    
    "Deserialization of XOrderIgnore succeeds even when information is missing" in {
      ExampleProductData.ExampleXOrderIgnore.isInstanceOf[net.liftweb.json.xschema.XOrderIgnore.type] must be (true)
    }
    "Serialization of XOrderIgnore has non-zero information content" in {
      Decomposers.XOrderIgnoreDecomposer.decompose(ExampleProductData.ExampleXOrderIgnore) mustNot be (JObject(Nil))
    }
  }
  object ExampleMultitypeData {
    lazy val ExampleXSchema: net.liftweb.json.xschema.XSchema = JObject(Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXProduct: net.liftweb.json.xschema.XSchema = JObject(JField("XProduct", net.liftweb.json.xschema.Decomposers.XProductDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXProduct)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXCoproduct: net.liftweb.json.xschema.XSchema = JObject(JField("XCoproduct", net.liftweb.json.xschema.Decomposers.XCoproductDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXCoproduct)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXUnion: net.liftweb.json.xschema.XSchema = JObject(JField("XUnion", net.liftweb.json.xschema.Decomposers.XUnionDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXUnion)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXBoolean: net.liftweb.json.xschema.XSchema = JObject(JField("XBoolean", net.liftweb.json.xschema.Decomposers.XBooleanDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXBoolean)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXInt: net.liftweb.json.xschema.XSchema = JObject(JField("XInt", net.liftweb.json.xschema.Decomposers.XIntDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXInt)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXLong: net.liftweb.json.xschema.XSchema = JObject(JField("XLong", net.liftweb.json.xschema.Decomposers.XLongDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXLong)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXFloat: net.liftweb.json.xschema.XSchema = JObject(JField("XFloat", net.liftweb.json.xschema.Decomposers.XFloatDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXFloat)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXDouble: net.liftweb.json.xschema.XSchema = JObject(JField("XDouble", net.liftweb.json.xschema.Decomposers.XDoubleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDouble)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXString: net.liftweb.json.xschema.XSchema = JObject(JField("XString", net.liftweb.json.xschema.Decomposers.XStringDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXString)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXJSON: net.liftweb.json.xschema.XSchema = JObject(JField("XJSON", net.liftweb.json.xschema.Decomposers.XJSONDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXJSON)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXDate: net.liftweb.json.xschema.XSchema = JObject(JField("XDate", net.liftweb.json.xschema.Decomposers.XDateDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDate)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXList: net.liftweb.json.xschema.XSchema = JObject(JField("XList", net.liftweb.json.xschema.Decomposers.XListDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXList)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXSet: net.liftweb.json.xschema.XSchema = JObject(JField("XSet", net.liftweb.json.xschema.Decomposers.XSetDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXSet)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXArray: net.liftweb.json.xschema.XSchema = JObject(JField("XArray", net.liftweb.json.xschema.Decomposers.XArrayDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXArray)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXMap: net.liftweb.json.xschema.XSchema = JObject(JField("XMap", net.liftweb.json.xschema.Decomposers.XMapDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXMap)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXOptional: net.liftweb.json.xschema.XSchema = JObject(JField("XOptional", net.liftweb.json.xschema.Decomposers.XOptionalDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOptional)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXTuple: net.liftweb.json.xschema.XSchema = JObject(JField("XTuple", net.liftweb.json.xschema.Decomposers.XTupleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXTuple)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXDefinitionRef: net.liftweb.json.xschema.XSchema = JObject(JField("XDefinitionRef", net.liftweb.json.xschema.Decomposers.XDefinitionRefDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDefinitionRef)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXRealField: net.liftweb.json.xschema.XSchema = JObject(JField("XRealField", net.liftweb.json.xschema.Decomposers.XRealFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXRealField)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXViewField: net.liftweb.json.xschema.XSchema = JObject(JField("XViewField", net.liftweb.json.xschema.Decomposers.XViewFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXViewField)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXConstantField: net.liftweb.json.xschema.XSchema = JObject(JField("XConstantField", net.liftweb.json.xschema.Decomposers.XConstantFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXConstantField)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    lazy val ExampleXSchemaFromXConstant: net.liftweb.json.xschema.XSchema = JObject(JField("XConstant", net.liftweb.json.xschema.Decomposers.XConstantDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXConstant)) :: Nil).deserialize[net.liftweb.json.xschema.XSchema]
    
    lazy val ExampleXReference: net.liftweb.json.xschema.XReference = JObject(Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXBoolean: net.liftweb.json.xschema.XReference = JObject(JField("XBoolean", net.liftweb.json.xschema.Decomposers.XBooleanDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXBoolean)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXInt: net.liftweb.json.xschema.XReference = JObject(JField("XInt", net.liftweb.json.xschema.Decomposers.XIntDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXInt)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXLong: net.liftweb.json.xschema.XReference = JObject(JField("XLong", net.liftweb.json.xschema.Decomposers.XLongDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXLong)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXFloat: net.liftweb.json.xschema.XReference = JObject(JField("XFloat", net.liftweb.json.xschema.Decomposers.XFloatDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXFloat)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXDouble: net.liftweb.json.xschema.XReference = JObject(JField("XDouble", net.liftweb.json.xschema.Decomposers.XDoubleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDouble)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXString: net.liftweb.json.xschema.XReference = JObject(JField("XString", net.liftweb.json.xschema.Decomposers.XStringDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXString)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXJSON: net.liftweb.json.xschema.XReference = JObject(JField("XJSON", net.liftweb.json.xschema.Decomposers.XJSONDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXJSON)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXDate: net.liftweb.json.xschema.XReference = JObject(JField("XDate", net.liftweb.json.xschema.Decomposers.XDateDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDate)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXList: net.liftweb.json.xschema.XReference = JObject(JField("XList", net.liftweb.json.xschema.Decomposers.XListDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXList)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXSet: net.liftweb.json.xschema.XReference = JObject(JField("XSet", net.liftweb.json.xschema.Decomposers.XSetDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXSet)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXArray: net.liftweb.json.xschema.XReference = JObject(JField("XArray", net.liftweb.json.xschema.Decomposers.XArrayDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXArray)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXMap: net.liftweb.json.xschema.XReference = JObject(JField("XMap", net.liftweb.json.xschema.Decomposers.XMapDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXMap)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXOptional: net.liftweb.json.xschema.XReference = JObject(JField("XOptional", net.liftweb.json.xschema.Decomposers.XOptionalDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOptional)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXTuple: net.liftweb.json.xschema.XReference = JObject(JField("XTuple", net.liftweb.json.xschema.Decomposers.XTupleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXTuple)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    lazy val ExampleXReferenceFromXDefinitionRef: net.liftweb.json.xschema.XReference = JObject(JField("XDefinitionRef", net.liftweb.json.xschema.Decomposers.XDefinitionRefDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDefinitionRef)) :: Nil).deserialize[net.liftweb.json.xschema.XReference]
    
    lazy val ExampleXPrimitiveRef: net.liftweb.json.xschema.XPrimitiveRef = JObject(Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXBoolean: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XBoolean", net.liftweb.json.xschema.Decomposers.XBooleanDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXBoolean)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXInt: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XInt", net.liftweb.json.xschema.Decomposers.XIntDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXInt)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXLong: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XLong", net.liftweb.json.xschema.Decomposers.XLongDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXLong)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXFloat: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XFloat", net.liftweb.json.xschema.Decomposers.XFloatDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXFloat)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXDouble: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XDouble", net.liftweb.json.xschema.Decomposers.XDoubleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDouble)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXString: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XString", net.liftweb.json.xschema.Decomposers.XStringDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXString)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXJSON: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XJSON", net.liftweb.json.xschema.Decomposers.XJSONDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXJSON)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    lazy val ExampleXPrimitiveRefFromXDate: net.liftweb.json.xschema.XPrimitiveRef = JObject(JField("XDate", net.liftweb.json.xschema.Decomposers.XDateDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXDate)) :: Nil).deserialize[net.liftweb.json.xschema.XPrimitiveRef]
    
    lazy val ExampleXContainerRef: net.liftweb.json.xschema.XContainerRef = JObject(Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXList: net.liftweb.json.xschema.XContainerRef = JObject(JField("XList", net.liftweb.json.xschema.Decomposers.XListDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXList)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXSet: net.liftweb.json.xschema.XContainerRef = JObject(JField("XSet", net.liftweb.json.xschema.Decomposers.XSetDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXSet)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXArray: net.liftweb.json.xschema.XContainerRef = JObject(JField("XArray", net.liftweb.json.xschema.Decomposers.XArrayDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXArray)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXMap: net.liftweb.json.xschema.XContainerRef = JObject(JField("XMap", net.liftweb.json.xschema.Decomposers.XMapDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXMap)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXOptional: net.liftweb.json.xschema.XContainerRef = JObject(JField("XOptional", net.liftweb.json.xschema.Decomposers.XOptionalDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOptional)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    lazy val ExampleXContainerRefFromXTuple: net.liftweb.json.xschema.XContainerRef = JObject(JField("XTuple", net.liftweb.json.xschema.Decomposers.XTupleDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXTuple)) :: Nil).deserialize[net.liftweb.json.xschema.XContainerRef]
    
    lazy val ExampleXCollection: net.liftweb.json.xschema.XCollection = JObject(Nil).deserialize[net.liftweb.json.xschema.XCollection]
    lazy val ExampleXCollectionFromXList: net.liftweb.json.xschema.XCollection = JObject(JField("XList", net.liftweb.json.xschema.Decomposers.XListDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXList)) :: Nil).deserialize[net.liftweb.json.xschema.XCollection]
    lazy val ExampleXCollectionFromXSet: net.liftweb.json.xschema.XCollection = JObject(JField("XSet", net.liftweb.json.xschema.Decomposers.XSetDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXSet)) :: Nil).deserialize[net.liftweb.json.xschema.XCollection]
    lazy val ExampleXCollectionFromXArray: net.liftweb.json.xschema.XCollection = JObject(JField("XArray", net.liftweb.json.xschema.Decomposers.XArrayDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXArray)) :: Nil).deserialize[net.liftweb.json.xschema.XCollection]
    
    lazy val ExampleXDefinition: net.liftweb.json.xschema.XDefinition = JObject(Nil).deserialize[net.liftweb.json.xschema.XDefinition]
    lazy val ExampleXDefinitionFromXProduct: net.liftweb.json.xschema.XDefinition = JObject(JField("XProduct", net.liftweb.json.xschema.Decomposers.XProductDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXProduct)) :: Nil).deserialize[net.liftweb.json.xschema.XDefinition]
    lazy val ExampleXDefinitionFromXCoproduct: net.liftweb.json.xschema.XDefinition = JObject(JField("XCoproduct", net.liftweb.json.xschema.Decomposers.XCoproductDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXCoproduct)) :: Nil).deserialize[net.liftweb.json.xschema.XDefinition]
    lazy val ExampleXDefinitionFromXUnion: net.liftweb.json.xschema.XDefinition = JObject(JField("XUnion", net.liftweb.json.xschema.Decomposers.XUnionDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXUnion)) :: Nil).deserialize[net.liftweb.json.xschema.XDefinition]
    
    lazy val ExampleXMultitype: net.liftweb.json.xschema.XMultitype = JObject(Nil).deserialize[net.liftweb.json.xschema.XMultitype]
    lazy val ExampleXMultitypeFromXCoproduct: net.liftweb.json.xschema.XMultitype = JObject(JField("XCoproduct", net.liftweb.json.xschema.Decomposers.XCoproductDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXCoproduct)) :: Nil).deserialize[net.liftweb.json.xschema.XMultitype]
    lazy val ExampleXMultitypeFromXUnion: net.liftweb.json.xschema.XMultitype = JObject(JField("XUnion", net.liftweb.json.xschema.Decomposers.XUnionDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXUnion)) :: Nil).deserialize[net.liftweb.json.xschema.XMultitype]
    
    lazy val ExampleXField: net.liftweb.json.xschema.XField = JObject(Nil).deserialize[net.liftweb.json.xschema.XField]
    lazy val ExampleXFieldFromXRealField: net.liftweb.json.xschema.XField = JObject(JField("XRealField", net.liftweb.json.xschema.Decomposers.XRealFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXRealField)) :: Nil).deserialize[net.liftweb.json.xschema.XField]
    lazy val ExampleXFieldFromXViewField: net.liftweb.json.xschema.XField = JObject(JField("XViewField", net.liftweb.json.xschema.Decomposers.XViewFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXViewField)) :: Nil).deserialize[net.liftweb.json.xschema.XField]
    lazy val ExampleXFieldFromXConstantField: net.liftweb.json.xschema.XField = JObject(JField("XConstantField", net.liftweb.json.xschema.Decomposers.XConstantFieldDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXConstantField)) :: Nil).deserialize[net.liftweb.json.xschema.XField]
    
    lazy val ExampleXOrder: net.liftweb.json.xschema.XOrder = JObject(Nil).deserialize[net.liftweb.json.xschema.XOrder]
    lazy val ExampleXOrderFromXOrderAscending: net.liftweb.json.xschema.XOrder = JObject(JField("XOrderAscending", net.liftweb.json.xschema.Decomposers.XOrderAscendingDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOrderAscending)) :: Nil).deserialize[net.liftweb.json.xschema.XOrder]
    lazy val ExampleXOrderFromXOrderDescending: net.liftweb.json.xschema.XOrder = JObject(JField("XOrderDescending", net.liftweb.json.xschema.Decomposers.XOrderDescendingDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOrderDescending)) :: Nil).deserialize[net.liftweb.json.xschema.XOrder]
    lazy val ExampleXOrderFromXOrderIgnore: net.liftweb.json.xschema.XOrder = JObject(JField("XOrderIgnore", net.liftweb.json.xschema.Decomposers.XOrderIgnoreDecomposer.decompose(net.liftweb.json.xschema.ExampleProductData.ExampleXOrderIgnore)) :: Nil).deserialize[net.liftweb.json.xschema.XOrder]
  }
  class DataCoproductSerializationTest extends Runner(DataCoproductSerializationExamples) with JUnit
  object DataCoproductSerializationExamples extends Specification {
    "Deserialization of XSchema succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXSchema.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchema.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XSchema (from XProduct) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXProduct.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XProduct) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXProduct.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XCoproduct) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXCoproduct.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XCoproduct) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXCoproduct.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XUnion) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXUnion.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XUnion) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXUnion.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XBoolean) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXBoolean.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XBoolean) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXBoolean.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XInt) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXInt.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XInt) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXInt.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XLong) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXLong.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XLong) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXLong.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XFloat) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXFloat.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XFloat) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXFloat.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XDouble) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXDouble.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XDouble) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXDouble.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XString) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXString.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XString) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXString.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XJSON) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXJSON.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XJSON) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXJSON.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XDate) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXDate.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XDate) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXDate.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XList) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXList.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XList) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXList.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XSet) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXSet.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XSet) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXSet.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XArray) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXArray.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XArray) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXArray.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XMap) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXMap.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XMap) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXMap.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XOptional) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXOptional.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XOptional) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXOptional.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XTuple) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXTuple.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XTuple) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXTuple.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XDefinitionRef) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXDefinitionRef.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XDefinitionRef) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXDefinitionRef.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XRealField) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXRealField.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XRealField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXRealField.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XViewField) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXViewField.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XViewField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXViewField.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XConstantField) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXConstantField.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XConstantField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXConstantField.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XSchema (from XConstant) succeeds" in {
      ExampleMultitypeData.ExampleXSchemaFromXConstant.isInstanceOf[net.liftweb.json.xschema.XSchema] must be (true)
    }            
    "Serialization of XSchema (from XConstant) has non-zero information content" in {
      ExampleMultitypeData.ExampleXSchemaFromXConstant.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XReference succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXReference.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference has non-zero information content" in {
      ExampleMultitypeData.ExampleXReference.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XReference (from XBoolean) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXBoolean.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XBoolean) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXBoolean.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XInt) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXInt.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XInt) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXInt.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XLong) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXLong.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XLong) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXLong.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XFloat) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXFloat.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XFloat) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXFloat.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XDouble) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXDouble.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XDouble) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXDouble.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XString) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXString.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XString) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXString.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XJSON) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXJSON.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XJSON) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXJSON.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XDate) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXDate.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XDate) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXDate.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XList) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXList.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XList) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXList.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XSet) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXSet.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XSet) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXSet.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XArray) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXArray.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XArray) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXArray.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XMap) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXMap.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XMap) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXMap.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XOptional) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXOptional.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XOptional) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXOptional.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XTuple) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXTuple.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XTuple) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXTuple.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XReference (from XDefinitionRef) succeeds" in {
      ExampleMultitypeData.ExampleXReferenceFromXDefinitionRef.isInstanceOf[net.liftweb.json.xschema.XReference] must be (true)
    }            
    "Serialization of XReference (from XDefinitionRef) has non-zero information content" in {
      ExampleMultitypeData.ExampleXReferenceFromXDefinitionRef.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XPrimitiveRef succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXPrimitiveRef.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRef.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XPrimitiveRef (from XBoolean) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXBoolean.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XBoolean) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXBoolean.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XInt) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXInt.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XInt) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXInt.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XLong) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXLong.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XLong) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXLong.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XFloat) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXFloat.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XFloat) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXFloat.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XDouble) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXDouble.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XDouble) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXDouble.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XString) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXString.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XString) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXString.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XJSON) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXJSON.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XJSON) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXJSON.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XPrimitiveRef (from XDate) succeeds" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXDate.isInstanceOf[net.liftweb.json.xschema.XPrimitiveRef] must be (true)
    }            
    "Serialization of XPrimitiveRef (from XDate) has non-zero information content" in {
      ExampleMultitypeData.ExampleXPrimitiveRefFromXDate.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XContainerRef succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXContainerRef.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRef.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XContainerRef (from XList) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXList.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XList) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXList.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XContainerRef (from XSet) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXSet.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XSet) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXSet.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XContainerRef (from XArray) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXArray.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XArray) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXArray.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XContainerRef (from XMap) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXMap.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XMap) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXMap.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XContainerRef (from XOptional) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXOptional.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XOptional) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXOptional.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XContainerRef (from XTuple) succeeds" in {
      ExampleMultitypeData.ExampleXContainerRefFromXTuple.isInstanceOf[net.liftweb.json.xschema.XContainerRef] must be (true)
    }            
    "Serialization of XContainerRef (from XTuple) has non-zero information content" in {
      ExampleMultitypeData.ExampleXContainerRefFromXTuple.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XCollection succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXCollection.isInstanceOf[net.liftweb.json.xschema.XCollection] must be (true)
    }            
    "Serialization of XCollection has non-zero information content" in {
      ExampleMultitypeData.ExampleXCollection.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XCollection (from XList) succeeds" in {
      ExampleMultitypeData.ExampleXCollectionFromXList.isInstanceOf[net.liftweb.json.xschema.XCollection] must be (true)
    }            
    "Serialization of XCollection (from XList) has non-zero information content" in {
      ExampleMultitypeData.ExampleXCollectionFromXList.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XCollection (from XSet) succeeds" in {
      ExampleMultitypeData.ExampleXCollectionFromXSet.isInstanceOf[net.liftweb.json.xschema.XCollection] must be (true)
    }            
    "Serialization of XCollection (from XSet) has non-zero information content" in {
      ExampleMultitypeData.ExampleXCollectionFromXSet.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XCollection (from XArray) succeeds" in {
      ExampleMultitypeData.ExampleXCollectionFromXArray.isInstanceOf[net.liftweb.json.xschema.XCollection] must be (true)
    }            
    "Serialization of XCollection (from XArray) has non-zero information content" in {
      ExampleMultitypeData.ExampleXCollectionFromXArray.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XDefinition succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXDefinition.isInstanceOf[net.liftweb.json.xschema.XDefinition] must be (true)
    }            
    "Serialization of XDefinition has non-zero information content" in {
      ExampleMultitypeData.ExampleXDefinition.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XDefinition (from XProduct) succeeds" in {
      ExampleMultitypeData.ExampleXDefinitionFromXProduct.isInstanceOf[net.liftweb.json.xschema.XDefinition] must be (true)
    }            
    "Serialization of XDefinition (from XProduct) has non-zero information content" in {
      ExampleMultitypeData.ExampleXDefinitionFromXProduct.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XDefinition (from XCoproduct) succeeds" in {
      ExampleMultitypeData.ExampleXDefinitionFromXCoproduct.isInstanceOf[net.liftweb.json.xschema.XDefinition] must be (true)
    }            
    "Serialization of XDefinition (from XCoproduct) has non-zero information content" in {
      ExampleMultitypeData.ExampleXDefinitionFromXCoproduct.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XDefinition (from XUnion) succeeds" in {
      ExampleMultitypeData.ExampleXDefinitionFromXUnion.isInstanceOf[net.liftweb.json.xschema.XDefinition] must be (true)
    }            
    "Serialization of XDefinition (from XUnion) has non-zero information content" in {
      ExampleMultitypeData.ExampleXDefinitionFromXUnion.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XMultitype succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXMultitype.isInstanceOf[net.liftweb.json.xschema.XMultitype] must be (true)
    }            
    "Serialization of XMultitype has non-zero information content" in {
      ExampleMultitypeData.ExampleXMultitype.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XMultitype (from XCoproduct) succeeds" in {
      ExampleMultitypeData.ExampleXMultitypeFromXCoproduct.isInstanceOf[net.liftweb.json.xschema.XMultitype] must be (true)
    }            
    "Serialization of XMultitype (from XCoproduct) has non-zero information content" in {
      ExampleMultitypeData.ExampleXMultitypeFromXCoproduct.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XMultitype (from XUnion) succeeds" in {
      ExampleMultitypeData.ExampleXMultitypeFromXUnion.isInstanceOf[net.liftweb.json.xschema.XMultitype] must be (true)
    }            
    "Serialization of XMultitype (from XUnion) has non-zero information content" in {
      ExampleMultitypeData.ExampleXMultitypeFromXUnion.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XField succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXField.isInstanceOf[net.liftweb.json.xschema.XField] must be (true)
    }            
    "Serialization of XField has non-zero information content" in {
      ExampleMultitypeData.ExampleXField.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XField (from XRealField) succeeds" in {
      ExampleMultitypeData.ExampleXFieldFromXRealField.isInstanceOf[net.liftweb.json.xschema.XField] must be (true)
    }            
    "Serialization of XField (from XRealField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXFieldFromXRealField.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XField (from XViewField) succeeds" in {
      ExampleMultitypeData.ExampleXFieldFromXViewField.isInstanceOf[net.liftweb.json.xschema.XField] must be (true)
    }            
    "Serialization of XField (from XViewField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXFieldFromXViewField.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XField (from XConstantField) succeeds" in {
      ExampleMultitypeData.ExampleXFieldFromXConstantField.isInstanceOf[net.liftweb.json.xschema.XField] must be (true)
    }            
    "Serialization of XField (from XConstantField) has non-zero information content" in {
      ExampleMultitypeData.ExampleXFieldFromXConstantField.serialize mustNot be (JObject(Nil))
    }
    
    "Deserialization of XOrder succeeds even when information is missing" in {
      ExampleMultitypeData.ExampleXOrder.isInstanceOf[net.liftweb.json.xschema.XOrder] must be (true)
    }            
    "Serialization of XOrder has non-zero information content" in {
      ExampleMultitypeData.ExampleXOrder.serialize mustNot be (JObject(Nil))
    }
  
    "Deserialization of XOrder (from XOrderAscending) succeeds" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderAscending.isInstanceOf[net.liftweb.json.xschema.XOrder] must be (true)
    }            
    "Serialization of XOrder (from XOrderAscending) has non-zero information content" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderAscending.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XOrder (from XOrderDescending) succeeds" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderDescending.isInstanceOf[net.liftweb.json.xschema.XOrder] must be (true)
    }            
    "Serialization of XOrder (from XOrderDescending) has non-zero information content" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderDescending.serialize mustNot be (JObject(Nil))
    }
    "Deserialization of XOrder (from XOrderIgnore) succeeds" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderIgnore.isInstanceOf[net.liftweb.json.xschema.XOrder] must be (true)
    }            
    "Serialization of XOrder (from XOrderIgnore) has non-zero information content" in {
      ExampleMultitypeData.ExampleXOrderFromXOrderIgnore.serialize mustNot be (JObject(Nil))
    }
  }
  class DataConstantsSerializationTest extends Runner(DataConstantsSerializationExamples) with JUnit
  object DataConstantsSerializationExamples extends Specification {
    
  }
}